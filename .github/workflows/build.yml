name: Build, Push Docker Images, and Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest

      - name: Build and push frontend Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/chat-app-frontend:latest

      - name: Start backend container
        run: docker run -d -p 3000:3000 --network host ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:3000/graphql; then
              exit 0
            fi
            echo "Waiting for backend to be ready..."
            docker logs $(docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest") # Print logs to help with debugging
            sleep 5
          done
          echo "Backend is not ready"
          exit 1

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_BACKEND }}
          images: '${{ secrets.DOCKER_USERNAME }}/chat-app-backend:latest'

      - name: Deploy frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME_FRONTEND }}
          images: '${{ secrets.DOCKER_USERNAME }}/chat-app-frontend:latest'

      # Add Node.js setup
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Install Newman
      - name: Install Newman
        run: npm install -g newman

      # Run Newman tests
      - name: Run Newman tests
        run: newman run backend/postman/Web_Project.postman_collection.json
